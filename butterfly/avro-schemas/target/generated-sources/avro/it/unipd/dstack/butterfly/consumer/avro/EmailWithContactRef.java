/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package it.unipd.dstack.butterfly.consumer.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Avro Schema that aggregates the event to notify to the user, and the contact info of said user */
@org.apache.avro.specific.AvroGenerated
public class EmailWithContactRef extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6613539945180447476L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EmailWithContactRef\",\"namespace\":\"it.unipd.dstack.butterfly.consumer.avro\",\"doc\":\"Avro Schema that aggregates the event to notify to the user, and the contact info of said user\",\"fields\":[{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"\"},{\"name\":\"contactRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"The ID that identifies the user in the chosen contact platform\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EmailWithContactRef> ENCODER =
      new BinaryMessageEncoder<EmailWithContactRef>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EmailWithContactRef> DECODER =
      new BinaryMessageDecoder<EmailWithContactRef>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<EmailWithContactRef> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<EmailWithContactRef> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EmailWithContactRef>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this EmailWithContactRef to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a EmailWithContactRef from a ByteBuffer. */
  public static EmailWithContactRef fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /**  */
  @Deprecated public java.lang.String email;
  /** The ID that identifies the user in the chosen contact platform */
  @Deprecated public java.lang.String contactRef;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EmailWithContactRef() {}

  /**
   * All-args constructor.
   * @param email 
   * @param contactRef The ID that identifies the user in the chosen contact platform
   */
  public EmailWithContactRef(java.lang.String email, java.lang.String contactRef) {
    this.email = email;
    this.contactRef = contactRef;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return email;
    case 1: return contactRef;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: email = (java.lang.String)value$; break;
    case 1: contactRef = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'email' field.
   * @return 
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * 
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'contactRef' field.
   * @return The ID that identifies the user in the chosen contact platform
   */
  public java.lang.String getContactRef() {
    return contactRef;
  }

  /**
   * Sets the value of the 'contactRef' field.
   * The ID that identifies the user in the chosen contact platform
   * @param value the value to set.
   */
  public void setContactRef(java.lang.String value) {
    this.contactRef = value;
  }

  /**
   * Creates a new EmailWithContactRef RecordBuilder.
   * @return A new EmailWithContactRef RecordBuilder
   */
  public static it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder newBuilder() {
    return new it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder();
  }

  /**
   * Creates a new EmailWithContactRef RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EmailWithContactRef RecordBuilder
   */
  public static it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder newBuilder(it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder other) {
    return new it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder(other);
  }

  /**
   * Creates a new EmailWithContactRef RecordBuilder by copying an existing EmailWithContactRef instance.
   * @param other The existing instance to copy.
   * @return A new EmailWithContactRef RecordBuilder
   */
  public static it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder newBuilder(it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef other) {
    return new it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder(other);
  }

  /**
   * RecordBuilder for EmailWithContactRef instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EmailWithContactRef>
    implements org.apache.avro.data.RecordBuilder<EmailWithContactRef> {

    /**  */
    private java.lang.String email;
    /** The ID that identifies the user in the chosen contact platform */
    private java.lang.String contactRef;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.email)) {
        this.email = data().deepCopy(fields()[0].schema(), other.email);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.contactRef)) {
        this.contactRef = data().deepCopy(fields()[1].schema(), other.contactRef);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing EmailWithContactRef instance
     * @param other The existing instance to copy.
     */
    private Builder(it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.email)) {
        this.email = data().deepCopy(fields()[0].schema(), other.email);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.contactRef)) {
        this.contactRef = data().deepCopy(fields()[1].schema(), other.contactRef);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'email' field.
      * 
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * 
      * @param value The value of 'email'.
      * @return This builder.
      */
    public it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder setEmail(java.lang.String value) {
      validate(fields()[0], value);
      this.email = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * 
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'email' field.
      * 
      * @return This builder.
      */
    public it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder clearEmail() {
      email = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'contactRef' field.
      * The ID that identifies the user in the chosen contact platform
      * @return The value.
      */
    public java.lang.String getContactRef() {
      return contactRef;
    }

    /**
      * Sets the value of the 'contactRef' field.
      * The ID that identifies the user in the chosen contact platform
      * @param value The value of 'contactRef'.
      * @return This builder.
      */
    public it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder setContactRef(java.lang.String value) {
      validate(fields()[1], value);
      this.contactRef = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'contactRef' field has been set.
      * The ID that identifies the user in the chosen contact platform
      * @return True if the 'contactRef' field has been set, false otherwise.
      */
    public boolean hasContactRef() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'contactRef' field.
      * The ID that identifies the user in the chosen contact platform
      * @return This builder.
      */
    public it.unipd.dstack.butterfly.consumer.avro.EmailWithContactRef.Builder clearContactRef() {
      contactRef = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EmailWithContactRef build() {
      try {
        EmailWithContactRef record = new EmailWithContactRef();
        record.email = fieldSetFlags()[0] ? this.email : (java.lang.String) defaultValue(fields()[0]);
        record.contactRef = fieldSetFlags()[1] ? this.contactRef : (java.lang.String) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EmailWithContactRef>
    WRITER$ = (org.apache.avro.io.DatumWriter<EmailWithContactRef>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EmailWithContactRef>
    READER$ = (org.apache.avro.io.DatumReader<EmailWithContactRef>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
